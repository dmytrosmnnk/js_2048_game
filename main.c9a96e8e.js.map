{"version":3,"sources":["scripts/main.js"],"names":["restartButton","scoreField","document","querySelector","score","maxCellValue","firstRowSum","lastRowSum","firstColumnSum","lastColumnSum","x1","y1","x2","y2","number1","number2","numbers","startButton","messageStart","messageLose","messageWin","gameField","fieldCells","querySelectorAll","columnsAmount","rows","cells","length","rowsAmount","firstRow","lastRow","startButtonPush","addEventListener","arrowsEvents","classList","add","toggle","innerText","removeEventListener","restartButtonPush","addStartNumbers","countScore","styleCell","clearGameField","findMaxCellValue","sorted","sort","a","b","winLose","remove","find","cellX","checkAvailableStep","map","cell","className","randomNumbersStart","Math","floor","random","z","q","randomNumbersNext","r","addNumber","value","checker","i","column","filter","cellIndex","j","row","findFirstRowSum","reduce","sum","current","findLastRowSum","findFirstColumnSum","firstColumn","findLastColumnSum","lastColumn","arrowUp","checkScore1","checkSum1","addUp","arrowDown","addDown","arrowLeft","addLeft","arrowRight","addRight","event","code","forEach","moveInnerTextUpLeft","mergeInnerTextUpLeft","moveInnerTextDownRight","mergeInnerTextDownRight","cellsArray","start","end","k"],"mappings":"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","file":"main.c9a96e8e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst scoreField = document.querySelector('.game-score');\nlet score = 0;\nlet maxCellValue = 0;\nlet firstRowSum = 0;\nlet lastRowSum = 0;\nlet firstColumnSum = 0;\nlet lastColumnSum = 0;\nlet x1 = 0;\nlet y1 = 0;\nlet x2 = 0;\nlet y2 = 0;\nlet number1 = 2;\nlet number2 = 2;\nconst numbers = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\nconst startButton = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst gameField = document.querySelector('.game-field');\nconst fieldCells = document.querySelectorAll('.field-cell');\nlet restartButton;\nconst columnsAmount = gameField.rows[0].cells.length;\nconst rowsAmount = gameField.rows.length;\nconst firstRow = gameField.rows[0].cells;\nconst lastRow = gameField.rows[rowsAmount - 1].cells;\n\nstartButton.addEventListener('click', startButtonPush);\n\nfunction startButtonPush() {\n  document.addEventListener('keyup', arrowsEvents);\n  messageStart.classList.add('hidden');\n  startButton.classList.toggle('restart');\n  startButton.innerText = 'Restart';\n  startButton.removeEventListener('click', startButtonPush);\n\n  restartButton = document.querySelector('.restart');\n  restartButton.addEventListener('click', restartButtonPush);\n\n  addStartNumbers();\n  countScore();\n  styleCell();\n}\n\nfunction restartButtonPush() {\n  document.addEventListener('keyup', arrowsEvents);\n  score = 0;\n  clearGameField();\n  addStartNumbers();\n  countScore();\n  styleCell();\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n}\n\nfunction findMaxCellValue() {\n  const sorted = [...fieldCells].sort((a, b) =>\n    +b.innerText - +a.innerText);\n\n  maxCellValue = +sorted[0].innerText;\n}\n\nfunction countScore() {\n  scoreField.innerText = score;\n}\n\nfunction winLose() {\n  findMaxCellValue();\n\n  if (maxCellValue === 2048) {\n    messageWin.classList.remove('hidden');\n    document.removeEventListener('keyup', arrowsEvents);\n\n    return;\n  }\n\n  const emptyCell = [...fieldCells].find(cellX =>\n    cellX.innerText === '');\n  const checker = checkAvailableStep();\n\n  if (!emptyCell & checker === 0) {\n    messageLose.classList.remove('hidden');\n    document.removeEventListener('keyup', arrowsEvents);\n  }\n}\n\nfunction clearGameField() {\n  [...fieldCells].map(cell => {\n    cell.innerText = '';\n    cell.className = 'field-cell';\n  });\n}\n\nfunction randomNumbersStart() {\n  x1 = Math.floor(Math.random() * rowsAmount);\n  y1 = Math.floor(Math.random() * columnsAmount);\n  x2 = Math.floor(Math.random() * rowsAmount);\n  y2 = Math.floor(Math.random() * columnsAmount);\n\n  if (x2 === x1 & y2 === y1) {\n    randomNumbersStart();\n  }\n\n  const z = Math.floor(Math.random() * numbers.length);\n  const q = Math.floor(Math.random() * numbers.length);\n\n  number1 = +numbers[z];\n  number2 = +numbers[q];\n}\n\nfunction addStartNumbers() {\n  randomNumbersStart();\n  gameField.rows[x1].cells[y1].innerText = number1;\n  gameField.rows[x2].cells[y2].innerText = number2;\n}\n\nfunction randomNumbersNext() {\n  x1 = Math.floor(Math.random() * rowsAmount);\n  y1 = Math.floor(Math.random() * columnsAmount);\n\n  const r = Math.floor(Math.random() * numbers.length);\n\n  number1 = +numbers[r];\n\n  const cell = gameField.rows[x1].cells[y1];\n\n  if (cell.innerText) {\n    randomNumbersNext();\n  }\n}\n\nfunction addNumber() {\n  randomNumbersNext();\n  gameField.rows[x1].cells[y1].innerText = number1;\n}\n\nfunction styleCell() {\n  [...fieldCells].map(cell => {\n    const value = cell.innerText;\n\n    if (value !== '') {\n      cell.className = 'field-cell';\n      cell.classList.add(`field-cell--${value}`);\n    } else {\n      cell.className = 'field-cell';\n      cell.classList.add(`field-cell--default`);\n    }\n  });\n}\n\nfunction checkAvailableStep() {\n  let checker = 0;\n\n  for (let i = 0; i < columnsAmount; i++) {\n    const column = [...fieldCells].filter(cell =>\n      cell.cellIndex === i);\n\n    for (let j = 0; j < rowsAmount - 1; j++) {\n      if (\n        (column[j].innerText !== '')\n        & (column[j].innerText === column[j + 1].innerText)\n      ) {\n        checker++;\n      }\n    }\n  }\n\n  for (let i = 0; i < rowsAmount; i++) {\n    const row = [...gameField.rows[i].cells];\n\n    for (let j = 0; j < columnsAmount - 1; j++) {\n      if (\n        (row[j].innerText !== '')\n        & (row[j].innerText === row[j + 1].innerText)\n      ) {\n        checker++;\n      }\n    }\n  }\n\n  return checker;\n}\n\nfunction findFirstRowSum() {\n  firstRowSum = [...firstRow].reduce((sum, current) => {\n    if (current.innerText !== '') {\n      return sum + +current.innerText;\n    } else {\n      return sum + 0;\n    }\n  }, 0);\n}\n\nfunction findLastRowSum() {\n  lastRowSum = [...lastRow].reduce((sum, current) => {\n    if (current.innerText !== '') {\n      return sum + +current.innerText;\n    } else {\n      return sum + 0;\n    }\n  }, 0);\n}\n\nfunction findFirstColumnSum() {\n  const firstColumn = [...fieldCells].filter(cell =>\n    cell.cellIndex === 0);\n\n  firstColumnSum = [...firstColumn].reduce((sum, current) => {\n    if (current.innerText !== '') {\n      return sum + +current.innerText;\n    } else {\n      return sum + 0;\n    }\n  }, 0);\n}\n\nfunction findLastColumnSum() {\n  const lastColumn = [...fieldCells].filter(cell =>\n    cell.cellIndex === columnsAmount - 1);\n\n  lastColumnSum = [...lastColumn].reduce((sum, current) => {\n    if (current.innerText !== '') {\n      return sum + +current.innerText;\n    } else {\n      return sum + 0;\n    }\n  }, 0);\n}\n\nfunction arrowUp() {\n  findFirstRowSum();\n\n  const checkScore1 = score;\n  const checkSum1 = firstRowSum;\n\n  addUp();\n  countScore();\n  findFirstRowSum();\n\n  const checkScore2 = score;\n  const checkSum2 = firstRowSum;\n\n  if (checkScore2 > checkScore1\n    || checkSum2 !== checkSum1) {\n    addNumber();\n  }\n  styleCell();\n  winLose();\n};\n\nfunction arrowDown() {\n  findLastRowSum();\n\n  const checkScore1 = score;\n  const checkSum1 = lastRowSum;\n\n  addDown();\n  countScore();\n  findLastRowSum();\n\n  const checkScore2 = score;\n  const checkSum2 = lastRowSum;\n\n  if (checkScore2 > checkScore1\n    || checkSum2 !== checkSum1) {\n    addNumber();\n  }\n  styleCell();\n  winLose();\n};\n\nfunction arrowLeft() {\n  findFirstColumnSum();\n\n  const checkScore1 = score;\n  const checkSum1 = firstColumnSum;\n\n  addLeft();\n  countScore();\n  findFirstColumnSum();\n\n  const checkScore2 = score;\n  const checkSum2 = firstColumnSum;\n\n  if (checkScore2 > checkScore1\n    || checkSum2 !== checkSum1) {\n    addNumber();\n  }\n  styleCell();\n  winLose();\n};\n\nfunction arrowRight() {\n  findLastColumnSum();\n\n  const checkScore1 = score;\n  const checkSum1 = lastColumnSum;\n\n  addRight();\n  countScore();\n  findLastColumnSum();\n\n  const checkScore2 = score;\n  const checkSum2 = lastColumnSum;\n\n  if (checkScore2 > checkScore1\n    || checkSum2 !== checkSum1) {\n    addNumber();\n  }\n  styleCell();\n  winLose();\n};\n\n// eslint-disable-next-line no-shadow\nfunction arrowsEvents(event) {\n  switch (event.code) {\n    case 'ArrowUp':\n      arrowUp();\n      break;\n\n    case 'ArrowDown':\n      arrowDown();\n      break;\n\n    case 'ArrowLeft':\n      arrowLeft();\n      break;\n\n    case 'ArrowRight':\n      arrowRight();\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction addUp() {\n  for (let i = 0; i < columnsAmount; i++) {\n    const column = [...fieldCells].filter(cell =>\n      cell.cellIndex === i);\n\n    column.forEach(() => moveInnerTextUpLeft(column, 0, rowsAmount - 1));\n    mergeInnerTextUpLeft(column, 0, rowsAmount - 1);\n  }\n}\n\nfunction addDown() {\n  for (let i = 0; i < columnsAmount; i++) {\n    const column = [...fieldCells].filter((cell) => cell.cellIndex === i);\n\n    column.forEach(() => moveInnerTextDownRight(column, rowsAmount - 1, 0));\n    mergeInnerTextDownRight(column, rowsAmount - 1, 0);\n  }\n}\n\nfunction addLeft() {\n  for (let i = 0; i < rowsAmount; i++) {\n    const row = [...gameField.rows[i].cells];\n\n    row.forEach(() => moveInnerTextUpLeft(row, 0, columnsAmount - 1));\n    mergeInnerTextUpLeft(row, 0, columnsAmount - 1);\n  }\n}\n\nfunction addRight() {\n  for (let i = 0; i < rowsAmount; i++) {\n    const row = [...gameField.rows[i].cells];\n\n    row.forEach(() => moveInnerTextDownRight(row, columnsAmount - 1, 0));\n    mergeInnerTextDownRight(row, columnsAmount - 1, 0);\n  }\n}\n\nfunction mergeInnerTextUpLeft(cellsArray, start, end) {\n  for (let j = start; j < end; j++) {\n    if (\n      (cellsArray[j].innerText !== '')\n      & (cellsArray[j].innerText === cellsArray[j + 1].innerText)\n    ) {\n      cellsArray[j].innerText = +cellsArray[j].innerText * 2;\n      cellsArray[j + 1].innerText = '';\n      score += +cellsArray[j].innerText;\n    }\n  }\n}\n\nfunction moveInnerTextUpLeft(cellsArray, start, end) {\n  for (let k = start; k < end; k++) {\n    if (cellsArray[k].innerText === '') {\n      cellsArray[k].innerText = cellsArray[k + 1].innerText;\n      cellsArray[k + 1].innerText = '';\n    }\n  }\n}\n\nfunction mergeInnerTextDownRight(cellsArray, start, end) {\n  for (let j = start; j > end; j--) {\n    if (\n      (cellsArray[j].innerText !== '')\n      & (cellsArray[j].innerText === cellsArray[j - 1].innerText)\n    ) {\n      cellsArray[j].innerText = +cellsArray[j].innerText * 2;\n      cellsArray[j - 1].innerText = '';\n      score += +cellsArray[j].innerText;\n    }\n  }\n}\n\nfunction moveInnerTextDownRight(cellsArray, start, end) {\n  for (let k = start; k > end; k--) {\n    if (cellsArray[k].innerText === '') {\n      cellsArray[k].innerText = cellsArray[k - 1].innerText;\n      cellsArray[k - 1].innerText = '';\n    }\n  }\n}\n"]}